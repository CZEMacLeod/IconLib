# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: 'Default'

variables:
  solution: 'IconLib\IconLib.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  buildMachine: '$(Agent.MachineName)'
  buildUser: '$(Build.QueuedBy)'
  group: Github-Packages

steps:
- powershell: 'Write-Host ("##vso[task.setvariable variable=MSBuildEmitSolution;]0")'
  displayName: 'Ensure MSBuildEmitSolution is not set'

- task: NuGetToolInstaller@0
  inputs:
    versionSpec: 5.4.0

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'config'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    clean: true
    msbuildArgs: '/t:IconLib:Pack /p:PushPackage=false /p:PackageOutputPath="$(Build.ArtifactStagingDirectory)" /p:BuildUser="$(buildUser)" /p:BuildMachine="$(buildMachine)" /p:AssemblyVersionSuffix="-ci"'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

- script: ECHO Push packages from $(Build.ArtifactStagingDirectory) to $(GITHUB_PACKAGES)
  displayName: Push Nuget Packages to $(GITHUB_PACKAGES)
  env:
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    GITHUB_PACKAGES: $(GITHUB_PACKAGES)
    PACKAGES_DIR: $(Build.ArtifactStagingDirectory)

- script: nuget push -ApiKey %GITHUB_TOKEN% -Source "%GITHUB_PACKAGES%" "%PACKAGES_DIR%/*.nupkg"
  displayName: Push Nuget Packages to $(GITHUB_PACKAGES)
  env:
    GITHUB_TOKEN: $(GITHUB_TOKEN)
    GITHUB_PACKAGES: $(GITHUB_PACKAGES)
    PACKAGES_DIR: $(Build.ArtifactStagingDirectory)
